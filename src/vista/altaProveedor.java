package vista;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Conexion;
import org.apache.commons.dbutils.DbUtils;

public class altaProveedor extends javax.swing.JInternalFrame {

   Conexion con=new Conexion();
    

    DefaultTableModel modelo;
    
    public altaProveedor() {
        initComponents();

        // se manda llamar al metodo de llenado de tabla
        tabla();
        // se manda a llamar el metodo nuevo que hace ciertos campos de textos editables
        camposInicio();
        txtId.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        btNuevo = new javax.swing.JButton();
        btEditar = new javax.swing.JButton();
        jbAgregar = new javax.swing.JButton();
        btModificar = new javax.swing.JButton();
        btActivar = new javax.swing.JButton();
        txtWeb = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtId = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRFC = new javax.swing.JTextField();

        setBackground(new java.awt.Color(102, 102, 102));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Marca:");

        jLabel4.setText("WEB");

        btSalir.setMnemonic('s');
        btSalir.setText("Salir");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Usuario", "Clave", "Categoria"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(300);
            tabla.getColumnModel().getColumn(1).setResizable(false);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(2).setResizable(false);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(3).setResizable(false);
            tabla.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Acciones"));

        btNuevo.setBackground(new java.awt.Color(153, 153, 255));
        btNuevo.setMnemonic('n');
        btNuevo.setText("Nuevo");
        btNuevo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        btEditar.setMnemonic('e');
        btEditar.setText("Editar");
        btEditar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditarActionPerformed(evt);
            }
        });

        jbAgregar.setMnemonic('a');
        jbAgregar.setText("Agregar");
        jbAgregar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jbAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAgregarActionPerformed(evt);
            }
        });

        btModificar.setMnemonic('m');
        btModificar.setText("Modificar");
        btModificar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificarActionPerformed(evt);
            }
        });

        btActivar.setMnemonic('d');
        btActivar.setText("Activar/Des");
        btActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btActivarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btActivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btNuevo)
                .addGap(18, 18, 18)
                .addComponent(jbAgregar)
                .addGap(18, 18, 18)
                .addComponent(btEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btActivar)
                .addGap(25, 25, 25))
        );

        jLabel7.setText("Direcci√≥n:");

        jLabel8.setText("eMail:");

        jLabel9.setText("Telefono:");

        txtId.setText("_");

        jLabel5.setText("RFC");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel7))
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtId)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel3))
                                                    .addGap(43, 43, 43)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtWeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtId))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btSalir)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        // Salir del menu de alta
        this.dispose();
    }//GEN-LAST:event_btSalirActionPerformed

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        //Agregar nuevo campo
        camposNuevo();


    }//GEN-LAST:event_btNuevoActionPerformed

    private void jbAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAgregarActionPerformed
        //Agregar nuevo usuario
        int contador = 0; //se asigna un contador en caso de un registro repetido

        if (txtNombre.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir el nombre");
            txtNombre.requestFocus();
        } else if (txtDireccion.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir la direcci√≥n");
            txtDireccion.requestFocus();
        }else if (txtTelefono.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir el telefono");
            txtTelefono.requestFocus();
        }else if (txtMarca.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir la marca");
            txtMarca.requestFocus();
        } else {
            Connection cn = con.conectar();
            ResultSet rs = null;
            PreparedStatement ps = null;
            try {
                // revisamos si no hay un proveedor ya en la bd con los mismos datos
            String sql = "SELECT * FROM proveedor WHERE nombre = ?";
            ps=cn.prepareStatement(sql);
            ps.setString(1,txtNombre.getText());
            rs = ps.executeQuery();
                while (rs.next()) {
                    JOptionPane.showMessageDialog(this, "El proveedor ya se encuentra en la base de datos");
                    contador++;
}
                
            } catch (SQLException ex) {
                Logger.getLogger(altaProveedor.class.getName()).log(Level.SEVERE, null, ex);
            } 
            if (contador == 0) {
                
                try {
                    //se prepara a insertarlo en la tabla de proveedores   
                    
                    String sql = "INSERT INTO proveedor (nombre,direccion,telefono,email,activo,marca,rfc,web) VALUES (?,?,?,?,?,?,?,?)";
                    ps = cn.prepareStatement(sql);
                    ps.setString(1,txtNombre.getText().toUpperCase());
                    ps.setString(2,txtDireccion.getText().toUpperCase());
                    ps.setString(3,txtTelefono.getText());
                    ps.setString(4,txtEmail.getText());
                    ps.setString(5,"SI");
                    ps.setString(6,txtMarca.getText().toUpperCase().toUpperCase());
                    ps.setString(7,txtRFC.getText().toUpperCase().toUpperCase());
                    ps.setString(8,txtWeb.getText());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "se integro el nuevo proveedor");
                    tabla();
                    camposInicio();
                    btNuevo.setEnabled(true);
                    btActivar.setEnabled(true);
                    limpiar();

                } catch (SQLException ex) {
                    System.out.println(ex);
                } finally {
                    DbUtils.closeQuietly(ps);
                    DbUtils.closeQuietly(rs);
                    DbUtils.closeQuietly(cn);
                }
            }
        }
    }//GEN-LAST:event_jbAgregarActionPerformed

    private void btEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditarActionPerformed
                                             
        //Editar
        //primero limpio los campos
        limpiar();
        
        

        //ahora agrego los datos seleccionados de la tabla
        int fila = tabla.getSelectedRow();

        if (fila >= 0) {
            String id = tabla.getValueAt(fila, 0).toString();
            
            Connection cn = con.conectar();
            ResultSet rs = null;
            Statement st = null;
            try {
                String sql="SELECT * FROM proveedor WHERE idproveedor='"+id+"'";
                st=cn.createStatement();
                rs=st.executeQuery(sql);
                while (rs.next()){
                    txtId.setText(rs.getString("idproveedor"));
                    txtNombre.setText(rs.getString("nombre"));
                    txtMarca.setText(rs.getString("marca"));
                    txtTelefono.setText(rs.getString("telefono"));
                    txtDireccion.setText(rs.getString("direccion"));
                    txtEmail.setText(rs.getString("email"));
                    txtWeb.setText(rs.getString("web"));
                }
            } catch (Exception e) {
                System.out.println(e);
            }finally {
                    DbUtils.closeQuietly(st);
                    DbUtils.closeQuietly(rs);
                    DbUtils.closeQuietly(cn);
                }
            
            btEditar.setEnabled(false);
            btModificar.setEnabled(true);
            btNuevo.setEnabled(false);
            btActivar.setEnabled(false);
            txtNombre.setEnabled(true);
            txtTelefono.setEnabled(true);
            txtMarca.setEnabled(true);
            txtWeb.setEnabled(true); 
            txtDireccion.setEnabled(true); 
            txtEmail.setEnabled(true); 
            
        }else {
           JOptionPane.showMessageDialog(this, "Selecciona un campo de la tabla");
        }


    }//GEN-LAST:event_btEditarActionPerformed

    private void btModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificarActionPerformed
        //Boton de modificar campos
        if (txtNombre.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir el nombre");
            txtNombre.requestFocus();
        } else if (txtDireccion.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir la direcci√≥n");
            txtDireccion.requestFocus();
        }else if (txtTelefono.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir el telefono");
            txtTelefono.requestFocus();
        }else if (txtMarca.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir la marca");
            txtMarca.requestFocus();
        }else if (txtWeb.getText().equals("")){
            JOptionPane.showMessageDialog(this, "falta escribir la pagina web del proveedor");
            txtWeb.requestFocus();
        } else {
            Connection cn = con.conectar();
            ResultSet rs = null;
            PreparedStatement ps = null;
            try {
                String id = txtId.getText();
                String nombre = txtNombre.getText();
                String marca = txtMarca.getText();
                String telefono = txtTelefono.getText();
                String direccion = txtDireccion.getText();
                String email = txtEmail.getText();
                String web = txtWeb.getText();
                //se prepara a insertarlo en la tabla de usuarios   
                
                String sql = "UPDATE proveedor SET nombre=?,marca=?, telefono= ?,direccion=?,email=?,web=? WHERE idproveedor='" + id + "'";
                ps = cn.prepareStatement(sql);
                ps.setString(1, nombre);
                ps.setString(2, marca);
                ps.setString(3, telefono);
                ps.setString(4, direccion);
                ps.setString(5, email);
                ps.setString(6, web);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "se ha modificado el proveedor " + nombre);
                tabla();
                btNuevo.setEnabled(true);
                btActivar.setEnabled(true);
                btEditar.setEnabled(true);
                btModificar.setEnabled(false);
                txtNombre.setEnabled(false);
                txtMarca.setEnabled(false);
                txtTelefono.setEnabled(false);
                txtDireccion.setEnabled(false);
                txtEmail.setEnabled(false);
                txtWeb.setEnabled(false);

                limpiar();
                
            } catch (SQLException ex) {
                System.out.println(ex);
            } finally {
                DbUtils.closeQuietly(ps);
                DbUtils.closeQuietly(rs);
                DbUtils.closeQuietly(cn);
            }
        }

    }//GEN-LAST:event_btModificarActionPerformed

    private void btActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btActivarActionPerformed
        //actualizamos el estado del personal
        int fila = tabla.getSelectedRow();

        if (fila >= 0) {
            String id = tabla.getValueAt(fila, 0).toString();
            
                Connection cn = con.conectar();
                ResultSet rs = null;
                Statement st = null;
                try {
                    String activo = null;
                    st = cn.createStatement();
                    rs = st.executeQuery("SELECT activo FROM proveedor WHERE idproveedor='" + id + "'");
                    while (rs.next()) {
                        activo = rs.getString("activo");
                    }
                    if (activo.equals("SI")) {
                        st = cn.createStatement();
                        st.executeUpdate("UPDATE proveedor SET activo='NO' WHERE idproveedor='" + id + "'");
                    } else {
                        st = cn.createStatement();
                        st.executeUpdate("UPDATE proveedor SET activo='SI' WHERE idproveedor='" + id + "'");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(altaProveedor.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    DbUtils.closeQuietly(st);
                    DbUtils.closeQuietly(rs);
                    DbUtils.closeQuietly(cn);
                }

            
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona un proveedor de la tabla");
        }
        tabla();
    }//GEN-LAST:event_btActivarActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       if( evt.getKeyCode() == KeyEvent.VK_ESCAPE ) {
            System.exit(0); //Change this to dispose or whatever you want to do with the frame
        }
    }//GEN-LAST:event_formKeyPressed

    void camposInicio() {
        txtNombre.setEnabled(false);
        txtMarca.setEnabled(false);
        txtWeb.setEnabled(false);
        txtDireccion.setEnabled(false);
        txtEmail.setEnabled(false);
        txtTelefono.setEnabled(false);
        jbAgregar.setEnabled(false);
        btModificar.setEnabled(false);
        btEditar.setEnabled(true);
        btActivar.setEnabled(true);
    }

    void camposNuevo() {
        txtNombre.setEnabled(true);
        txtNombre.requestFocus();
        txtDireccion.setEnabled(true);
        txtEmail.setEnabled(true);
        txtTelefono.setEnabled(true);
        txtMarca.setEnabled(true);
        txtWeb.setEnabled(true);
        jbAgregar.setEnabled(true);
        btNuevo.setEnabled(false);
        btEditar.setEnabled(false);
        btActivar.setEnabled(false);
    }

    void limpiar() {
        txtNombre.setText("");
        txtDireccion.setText("");
        txtEmail.setText("");
        txtTelefono.setText("");
        txtMarca.setText("");
        txtWeb.setText("");
    }

    void tabla() {
        // desde aqui mandamos a llamar a todos los usuarios y los listamos en la tabla
        // se crea una matriz para almacenar los datos

        String[] cabecera = {"Id", "Nombre", "Marca", "Telefono", "Direccion", "Email", "Activo"};
        // se definen los registros que llevara la tabla
        String[] registros = new String[7];
        // se hace el llamado sql de todos los usuarios
        String sql = "SELECT * FROM proveedor";
        //establecemos los anchos en pixeles de las columnas
        int[] anchos = {0, 180, 150,150,150,100,70};
        modelo = new DefaultTableModel(null, cabecera);
        Connection cn = con.conectar();
        ResultSet rs = null;
        Statement st = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                registros[0] = rs.getString("idproveedor");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("marca");
                registros[3] = rs.getString("telefono");
                registros[4] = rs.getString("direccion");
                registros[5] = rs.getString("Email");
                registros[6] = rs.getString("activo");

                modelo.addRow(registros);

            }
            tabla.setModel(modelo);
            for (int i = 0; i < cabecera.length; i++) {
                
                tabla.getColumnModel().getColumn(i).setMaxWidth(anchos[i]);
                tabla.getColumnModel().getColumn(i).setMinWidth(anchos[i]);
                tabla.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                tabla.setFont(new java.awt.Font("Tahoma", 0, 12));
            }

        } catch (SQLException ex) {
            System.out.println("Sin poder ejecutar el query a la tabla" + ex);
        } finally {
            DbUtils.closeQuietly(st);
            DbUtils.closeQuietly(rs);
            DbUtils.closeQuietly(cn);
        }

    }

   
    public static void main(String args[]) {
     
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(altaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(altaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(altaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(altaProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new altaProveedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActivar;
    private javax.swing.JButton btEditar;
    private javax.swing.JButton btModificar;
    private javax.swing.JButton btNuevo;
    private javax.swing.JButton btSalir;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAgregar;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JLabel txtId;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtWeb;
    // End of variables declaration//GEN-END:variables
}
